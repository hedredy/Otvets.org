import os
import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ParseMode

# –£—Å—Ç–∞–Ω–æ–≤–∏–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)

TOKEN = os.getenv("BOT_TOKEN")  # –ë–µ—Ä—ë–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
ALLOWED_USERS = {954053674, 5743867278}  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –±–æ—Ç –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

MESSAGE = """üìÑ **–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:**  
üîπ **–û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª:** OTVETS_ORG  
üîπ **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª:** OtvetsOrg  

ü§ñ **–ù–∞—à –±–æ—Ç:** OtvetsOrgBot  

üíé **VIP-–ü–∞–∫–µ—Ç:** –ü–µ—Ä–µ–π—Ç–∏  

üí∏ **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:**  
üìå **–û—Ç–≤–µ—Ç—ã –û–ì–≠:** –ü–µ—Ä–µ–π—Ç–∏  
üìå **–£—Å—Ç–Ω–æ–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ:** –ü–µ—Ä–µ–π—Ç–∏  

‚≠ê **–û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:** –ß–∏—Ç–∞—Ç—å  

üë®‚Äçüíª **–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:** [@ISupportTelegram](https://t.me/ISupportTelegram)  
üåê **–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç:** [hedred.online](https://hedred.online)  
"""

@dp.message_handler(commands=["org"])
async def send_message(message: types.Message):
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    logging.info(f"Received /org command from user: {message.from_user.id}")

    if message.from_user.id in ALLOWED_USERS:
        logging.info(f"User {message.from_user.id} is allowed. Sending message.")
        await message.answer(MESSAGE, parse_mode=ParseMode.MARKDOWN, disable_web_page_preview=True)
    else:
        logging.info(f"User {message.from_user.id} is not authorized.")

async def main():
    try:
        await dp.start_polling()
    except Exception as e:
        logging.error(f"An error occurred: {e}")

if __name__ == "__main__":
    logging.info("Bot is starting...")
    asyncio.run(main())
